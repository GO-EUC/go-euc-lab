parameters:
- name: build
  displayName: Build Machine
  type: string
  default: build-1
  values:
  - build-1
  - build-2
  - build-3
  - build-4
  - build-5
  - build-6

- name: os
  displayName: Operating System
  type: string
  default: windows-11
  values:
  - windows-11
  - windows-10
  - server-2025
  - server-2022
  - server-2019

- name: delivery
  displayName: Delivery Model
  type: string
  default: citrix
  values:
  - citrix
  - omnissa
  - rdsh
  - parallels

trigger:
- none

pr: none

pool: GO Pipelines

variables:
- group: Lab


stages:
- stage: deploy
  displayName: Deploy build machines
  jobs:
    - job: deploy
      displayName: Build deployment
      workspace:
        clean: all
      steps:

      - task: DownloadBuildArtifacts@1
        displayName: Download Packer manifests
        inputs:
          buildType: 'specific'
          project: $(project_id)
          pipeline: $(pipeline_id)
          buildVersionToDownload: 'latest'
          downloadType: 'single'
          artifactName: 'manifests'
          downloadPath: '$(Build.Repository.LocalPath)'

      - task: PowerShell@2
        displayName: Set variables
        inputs:
          targetType: 'inline'
          script: |
            $env:VAULT_FORMAT="json"
            $env:VAULT_ADDR="$(vault_addr)"
            $env:VAULT_TOKEN="$(vault_token)"

            $tfVars = @()
            $tfVars += "root_path = `"$(Build.Repository.LocalPath)`""
            $tfVars += "build_name = `"${{ parameters.build }}`""
            $tfVars += "ansible_playbook = `"ansible/windows-image.yml`""
            $tfVars += "windows_template = `"${{ parameters.os }}`""

            $tfVars | Set-Content -Path terraform/vmware/build/terraform.tfvars -Force


      - task: CmdLine@2
        displayName: Terraform init
        inputs:
          script: 'terraform init'
          workingDirectory: '$(Build.Repository.LocalPath)/terraform/vmware/build'

      - task: CmdLine@2
        displayName: Terraform plan
        inputs:
          script: 'terraform plan -var="vault_address=$(vault_addr)" -var="vault_token=$(vault_token)" -out=plan.tfplan'
          workingDirectory: '$(Build.Repository.LocalPath)/terraform/vmware/build'

      - task: CmdLine@2
        displayName: Terraform apply
        inputs:
          script: 'terraform apply "plan.tfplan"'
          workingDirectory: '$(Build.Repository.LocalPath)/terraform/vmware/build'