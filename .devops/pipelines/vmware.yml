trigger:
- none

pr: none

pool: GO Pipelines


stages:
- stage: containers
  displayName: Setup Docker containers

  jobs:
    steps:
      - task: CmdLine@2
        displayName: Setup required packages
        inputs: | 
          pip3 install "docker-py"
          pip3 install "netaddr"
          apt install p7zip-full p7zip-rar
          ansible-galaxy collection install community.docker
          ansible-galaxy collection install ansible.posix

          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install vault

      - task: PowerShell@2
        displayName: Build inventory
        inputs:
          targetType: 'inline'
          script: |
            $env:VAULT_ADDR=$(vault_addr)
            $env:VAULT_TOKEN=$(vault_token)

            $domain = vault kv get -format json -mount=go domain | ConvertFrom-Json
            $network = vault kv get -format json -mount=go vmware/network | ConvertFrom-Json
            $vcsa = vault kv get -format json -mount=go vmware/vcsa | ConvertFrom-Json
            $docker = vault kv get -format json -mount=go docker | ConvertFrom-Json
            
            $inventory = @()
            $inventory += "[docker]"
            $inventory += "$($docker.data.name) ansible_host=$($docker.data.ip)"
            $inventory += ""
            $inventory += "[vcsa]"
            $inventory += "$($vcsa.data.name) ansible_host=$($vcsa.data.ip)"
            $inventory += ""
            $inventory += "[all:vars]"
            $inventory += "domain_name=$($domain.data.name)"
            $inventory += "network_dns=$($network.data.network_dns)"
            $inventory += "network_cidr=$($network.data.network_cidr)"

            $inventory | Set-Content -Path ansible/inventory -Force

            $env:ANSIBLE_HOST_KEY_CHECKING=False
            ansible-playbook ansible/docker.yml -i ansible/inventory -e ansible_user=$($content.data.user) -e ansible_password=`'$($content.data.password)`'
