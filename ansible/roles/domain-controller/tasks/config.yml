

- name: Set fact
  set_fact:
    domain_path: "dc={{ dns_domain_name.split('.')[0] }},dc={{ dns_domain_name.split('.')[1] }}"

- name: Check for ActiveDirectory DSC Powershell module
  win_psmodule:
    name: ActiveDirectoryDsc
    state: present
  retries: 5 

- name: Create OU
  win_dsc:
    resource_name: ADOrganizationalUnit
    name: GO
    path: "{{ domain_path }}"

- name: Create OU
  win_dsc:
    resource_name: ADOrganizationalUnit
    name: "{{ item }}"
    path: "OU=GO,{{ domain_path }}"
  loop:
    - Accounts
    - Groups
    - LoadGen
    - ServiceAccounts
    - Machines

- name: Create OU
  win_dsc:
    resource_name: ADOrganizationalUnit
    name: "{{ item }}"
    path: "OU=Machines,OU=GO,{{ domain_path }}"
  loop:
    - Bots
    - Builds
    - GPU
    - Infra
    - RDS
    - VDI

- name: Ensure the group LoadGen exists using sAMAccountName
  win_domain_group:
    name: LoadGen
    scope: global
    path: "OU=Groups,OU=GO,{{ domain_path }}"

- name: Create RDGateway Group
  win_domain_group:
    name: 'RD Gateway Users'
    scope: global
    path: "OU=Groups,OU=GO,{{ domain_path }}"

- name: Create Service accounts
  win_domain_user:
    name: sql_svc
    password: '{{ ansible_password }}'
    state: present
    path: "OU=ServiceAccounts,OU=GO,{{ domain_path }}"
    description: SQL Server - Service Account

- name: Create Service accounts
  win_domain_user:
    name: sql_agt
    password: '{{ ansible_password }}'
    state: present
    path: "OU=ServiceAccounts,OU=GO,{{ domain_path }}"
    description: SQL Agent - Service Account

- name: Create Service accounts
  win_domain_user:
    name: mdt
    password: '{{ ansible_password }}'
    state: present
    path: "OU=ServiceAccounts,OU=GO,{{ domain_path }}"
    groups:
    - Domain Admins

- name: Create Service accounts
  win_domain_user:
    name: loadgen_bot
    password: '{{ ansible_password }}'
    state: present
    path: "OU=ServiceAccounts,OU=GO,{{ domain_path }}"
    description: SQL Server - Service Account
    groups:
    - LoadGen

- name: Create LoadGen accounts
  win_domain_user:
    name: "{{ 'LoadGen%03d' | format(item | int) }}"
    upn: "{{ 'LoadGen%03d' | format(item | int)  | lower }}@{{ dns_domain_name | lower }}"
    company: LoadGen
    password: '{{ ansible_password }}'
    password_expired: no
    user_cannot_change_password: yes
    state: present
    path: "OU=LoadGen,OU=GO,{{ domain_path }}"
    description: LoadGen simulation account
    groups:
    - LoadGen
  when: "{{ item }} != 0"
  loop: "{{ range(51) | list }}"
