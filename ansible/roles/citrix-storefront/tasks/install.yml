---
- name: Built the environment dictonary and variables
  set_fact:
    citrix_username: "{{ lookup('env', 'citrix_username') }}"
    citrix_password: "{{ lookup('env', 'citrix_password') }}"

- name: Install Storefront Pre-Reqs
  win_feature:
    name:
    - Web-Server
    - Web-WebServer
    - Web-Common-Http
    - Web-Default-Doc
    - Web-Dir-Browsing
    - Web-Http-Errors
    - Web-Static-Content
    - Web-Http-Redirect
    - Web-Health
    - Web-Http-Logging
    - Web-Log-Libraries
    - Web-Http-Tracing
    - Web-Performance
    - Web-Stat-Compression
    - Web-Dyn-Compression
    - Web-Security
    - Web-Filtering
    - Web-Basic-Auth
    - Web-Windows-Auth
    - Web-App-Dev
    - Web-Net-Ext45
    - Web-AppInit
    - Web-ASP
    - Web-Asp-Net45
    - Web-CGI
    - Web-ISAPI-Ext
    - Web-ISAPI-Filter
    - Web-Includes
    - Web-Mgmt-Tools
    - Web-Mgmt-Console
    - Web-Mgmt-Compat
    - Web-Metabase
    - Web-Lgcy-Mgmt-Console
    - Web-Lgcy-Scripting
    - Web-WMI
    - Web-Scripting-Tools
    - NET-Framework-Features
    - NET-Framework-45-Features
    - NET-Framework-45-Core
    - NET-Framework-45-ASPNET
    - NET-WCF-Services45
    - NET-WCF-HTTP-Activation45
    - NET-WCF-TCP-PortSharing45
    - WAS
    - Telnet-Client
    state: present
  register: win_feature

- name: Reboot to complete domain join
  ansible.windows.win_reboot:
  when: win_feature.reboot_required

- name: Create Log Folder
  win_file:
    path: C:\Logs
    state: directory

- name: Create Download Folder
  win_file:
    path: C:\Download
    state: directory

- name: Create Citrix Download Folder
  win_file:
    path: C:\Download\Citrix
    state: directory

- name: Check if Citrix ISO is downloaded yet
  win_stat:
    path: C:\Download\Citrix\Citrix_Virtual_Apps_and_Desktops_7_2203.iso
  register: download_file

- name: Copy a single file
  ansible.windows.win_copy:
    src: files/Get-CTXBinary.ps1
    dest: C:\Download\Citrix\Get-CTXBinary.ps1

- name: Download Citrix Virtual Apps and Desktops 2203
  win_shell: C:\Download\Citrix\Get-CTXBinary.ps1 -DownloadNumber 20428 -DownloadFileName "Citrix_Virtual_Apps_and_Desktops_7_2203.iso" -DownloadPath C:\Download\Citrix\ -MyCitrixUsername "{{ citrix_username }}" -MyCitrixPassword "{{ citrix_password }}"
  register: citrix_download
  when: download_file.stat.exists == False

- name: Register iso path
  set_fact:
    iso_path: C:\Download\Citrix\Citrix_Virtual_Apps_and_Desktops_7_2203.iso
  when: download_file.stat.exists == True

- name: Register iso path
  set_fact:
    iso_path: "{{citrix_download.stdout | trim }}"
  when: download_file.stat.exists == False

- name: Debug Citrix download
  ansible.builtin.debug:
    msg: "{{ iso_path }}"

- name: Ensure an ISO is mounted
  win_disk_image:
    image_path: "{{ iso_path }}"
    state: present
  register: disk_image_out

- name: Run installer from mounted Citrix ISO
  win_package:
    path: "{{ disk_image_out.mount_paths[0] }}\\x64\\Storefront\\CitrixStoreFront-x64.exe"
    arguments: -silent
    expected_return_code: [0, 3, 3010]
    creates_path: C:\ProgramData\Citrix\Storefront Install
    product_id: '{416AC532-57F6-4FD7-AA4B-4F1D882C510A}'
    state: present
  register: sf_install   

- name: Unmount Citrix ISO
  win_disk_image:
    image_path: "{{ iso_path }}"
    state: absent

- name: Reboot to complete SF install
  ansible.windows.win_reboot:
  when: sf_install.changed