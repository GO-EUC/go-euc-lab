---
- name: Create directory structure
  win_file:
    path: C:\Download\LoadGen
    state: directory

- name: Check if LoadGen is downloaded yet
  win_stat:
    path: C:\Download\LoadGen\LoadGenSuite.zip
  register: download_file

- name: Download LoadGen Suite
  win_get_url:
    url: "https://download.loadgen.cloud/loadgen/CurrentMSI/LoadGenSuite.zip"
    dest: C:\Download\LoadGen\LoadGenSuite.zip
  when: download_file.stat.exists == False

- name: Check if LoadGen is exctracted yet
  win_stat:
    path: C:\Download\LoadGen\LoadGenSuite.exe
  register: extracted_file

- name: Extract LoadGen Suite zip
  win_unzip:
    src: C:\Download\LoadGen\LoadGenSuite.zip
    dest: C:\Download\LoadGen\
    creates: C:\Download\LoadGen\LoadGenSuite.exe
  when: extracted_file.stat.exists == False

- name: Install LoadGen
  win_package:
    path: C:\Download\LoadGen\LoadGenSuite.exe
    product_id: '{ED23CB99-3CCE-493E-8724-531632A2ACDD}' # LoadGen 5.0
    arguments: /S /v/qn
    expected_return_code: [0]
    state: present

# - name: Check if LoadGen Agent is installed
#   win_stat:
#     path: C:\Program Files\LoadGen\LoadGen Agent\LoadGen LoadBot Agent.exe
#   register: loadgen_agent

# - name: Create ProgramData directory structure for Agent
#   win_file:
#     path: C:\ProgramData\LoadGen\Download\Agent
#     state: directory
#   when: loadgen_agent.stat.exists == False

# - name: Download LoadGen Agent
#   win_get_url:
#     url: "https://download.loadgen.cloud/loadgen/{{ loadgen_version }}/LoadGenAgent.txt"
#     dest: C:\ProgramData\LoadGen\Download\Agent\AutoUpdate.dat
#   when: loadgen_agent.stat.exists == False

# - name: Run AutoUpdater for LoadGen Agent
#   win_command: '"C:\Program Files\LoadGen\AutoUpdater.exe" -i "C:\ProgramData\LoadGen\Download\Agent\AutoUpdate.dat"'
#   when: loadgen_agent.stat.exists == False

- name: Check if LoadGen Director is installed
  win_stat:
    path: C:\Program Files\LoadGen\LoadGen Director\LoadGen Director.exe
  register: loadgen_director

- name: Create ProgramData directory structure for Director
  win_file:
    path: C:\ProgramData\LoadGen\Download\Director
    state: directory
  when: loadgen_director.stat.exists == False

- name: Download LoadGen Director
  win_get_url:
    url: "https://download.loadgen.cloud/loadgen/{{ loadgen_version }}/LoadGenDirector.txt"
    dest: C:\ProgramData\LoadGen\Download\Director\AutoUpdate.dat
  when: loadgen_director.stat.exists == False

- name: Run AutoUpdater for LoadGen Director
  win_command: '"C:\Program Files\LoadGen\AutoUpdater.exe" -i "C:\ProgramData\LoadGen\Download\Director\AutoUpdate.dat"'
  when: loadgen_director.stat.exists == False

- name: Check if LoadGen Studio is installed
  win_stat:
    path: C:\Program Files\LoadGen\LoadGen Studio\LoadGen Studio.exe
  register: loadgen_studio

- name: Create ProgramData directory structure for Studio
  win_file:
    path: C:\ProgramData\LoadGen\Download\Studio
    state: directory
  when: loadgen_studio.stat.exists == False

- name: Download LoadGen Studio
  win_get_url:
    url: "https://download.loadgen.cloud/loadgen/{{ loadgen_version }}/LoadGenStudio.txt"
    dest: C:\ProgramData\LoadGen\Download\Studio\AutoUpdate.dat
  when: loadgen_studio.stat.exists == False

- name: Run AutoUpdater for LoadGen Studio
  win_command: '"C:\Program Files\LoadGen\AutoUpdater.exe" -i "C:\ProgramData\LoadGen\Download\Studio\AutoUpdate.dat"'
  when: loadgen_studio.stat.exists == False

- name: Check if LoadGen Analyzer is installed
  win_stat:
    path: C:\Program Files\LoadGen\LoadGen Analyzer\LoadGen Analyzer.exe
  register: loadgen_analyzer

- name: Create ProgramData directory structure for Analyzer
  win_file:
    path: C:\ProgramData\LoadGen\Download\Analyzer
    state: directory
  when: loadgen_analyzer.stat.exists == False

- name: Download LoadGen Analyzer
  win_get_url:
    url: "https://download.loadgen.cloud/loadgen/{{ loadgen_version }}/LoadGenAnalyzer.txt"
    dest: C:\ProgramData\LoadGen\Download\Analyzer\AutoUpdate.dat
  when: loadgen_analyzer.stat.exists == False

- name: Run AutoUpdater for LoadGen Analyzer
  win_command: '"C:\Program Files\LoadGen\AutoUpdater.exe" -i "C:\ProgramData\LoadGen\Download\Analyzer\AutoUpdate.dat"'
  when: loadgen_analyzer.stat.exists == False

- name: Remove ProgramData download directory structure for Director
  win_file:
    path: C:\ProgramData\LoadGen\Download
    state: absent

- name: Create ProgramData for Director Config
  win_file:
    path: C:\ProgramData\LoadGen\Director
    state: directory






- name: Create ProgramData for Director Config
  win_copy:
    src: LoadGenDatasources.xml
    dest: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml

- name: Set the LoadGen Datasources configuration property DatasourceName
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='DatasourceName']"
   fragment: "{{ datasource_name }}"
   type: text

- name: Set the LoadGen Datasources configuration property Active
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='Active']"
   fragment: "{{ datasource_active | lower }}"
   type: text

- name: Set the LoadGen Datasources configuration property DatabaseName
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='DatabaseName']"
   fragment: "{{ datasource_databasename }}"
   type: text

- name: Set the LoadGen Datasources configuration property IntegratedSecurity
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='IntegratedSecurity']"
   fragment: "{{ datasource_integrated_security | lower }}"
   type: text

- name: Set the LoadGen Datasources configuration property Password
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='Password']"
   fragment: "{{ datasource_password }}"
   type: text

- name: Set the LoadGen Datasources configuration property UserId
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='UserId']"
   fragment: "{{ datasource_user_id }}"
   type: text

- name: Set the LoadGen Datasources configuration property Servername
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='Servername']"
   fragment: "{{ datasource_servername }}"
   type: text

- name: Set the LoadGen Datasources configuration property TableCreateOnLoadTest
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TableCreateOnLoadTest']"
   fragment: "{{ datasource_table_create_on_load_test | lower }}"
   type: text

- name: Set the LoadGen Datasources configuration property TablenameDuaf
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TablenameDuaf']"
   fragment: "{{ datasource_tablename_duaf }}"
   type: text

- name: Set the LoadGen Datasources configuration property TablenamePerformanceCounters
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TablenamePerformanceCounters']"
   fragment: "{{ datasource_tablename_performance_counters }}"
   type: text

- name: Set the LoadGen Datasources configuration property TableprefixDuaf
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TableprefixDuaf']"
   fragment: "{{ datasource_tableprefix_duaf }}"
   type: text

- name: Set the LoadGen Datasources configuration property TableprefixPerformanceCounters
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TableprefixPerformanceCounters']"
   fragment: "{{ datasource_tableprefix_performance_counters }}"
   type: text

- name: Set the LoadGen Datasources configuration property UpdateInterval
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='UpdateInterval']"
   fragment: "{{ datasource_update_interval }}"
   type: text

- name: Set the LoadGen Datasources configuration property DebugSqlUpdateCount
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='DebugSqlUpdateCount']"
   fragment: "{{ datasource_debug_sql_update_count | lower }}"
   type: text

- name: Set the LoadGen Datasources configuration property TableSmdCreateOnLoadTest
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenDatasources.xml
   xpath: "/*[local-name()='DatasourcesDataset']/*[local-name()='Datasources']/*[local-name()='TableSmdCreateOnLoadTest']"
   fragment: "{{ datasource_table_smd_create_on_load_test | lower }}"
   type: text



- name: Create ProgramData for Director Config
  win_copy:
    src: LoadGenRunAsProfiles.xml
    dest: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml

- name: Set the LoadGen RunAsProfiles configuration property profileName
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='profileName']"
   fragment: "{{ profile_name }}"
   type: text

- name: Set the LoadGen RunAsProfiles configuration property Domain
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='Domain']"
   fragment: "{{ profile_domain }}"
   type: text

- name: Set the LoadGen RunAsProfiles configuration property DomainController
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='DomainController']"
   fragment: "{{ DomainController }}"
   type: text
   
- name: Set the LoadGen RunAsProfiles configuration property DomainDnsName
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='DomainDnsName']"
   fragment: "{{ profile_domain_dns_name }}"
   type: text

- name: Set the LoadGen RunAsProfiles configuration property Password
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='Password']"
   fragment: "{{ profile_password }}"
   type: text
   
- name: Set the LoadGen RunAsProfiles configuration property Username
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='Username']"
   fragment: "{{ profile_username }}"
   type: text

- name: Set the LoadGen RunAsProfiles configuration property Workgroup
  win_xml:
   path: C:\ProgramData\LoadGen\Director\LoadGenRunAsProfiles.xml
   xpath: "/*[local-name()='RunAsProfileDataset']/*[local-name()='RunAsProfiles']/*[local-name()='Workgroup']"
   fragment: "{{ profile_workgroup | lower }}"
   type: text